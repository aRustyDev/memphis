

name: codecov
on:
  push:
    branches: 
      - 'develop'
      - 'foo/*'
      - 'foo/**'
      - '!foo/*/456'
    # tags:
    #   - '*'
  pull_request:
    branches:
      - 'develop'
  # schedule:
  #   - cron: '*/15 * * * *'
jobs:
  job1:
    # strategy:
    #   matrix:
    #     os: [ubuntu-16.04, ubuntu-18.04]
    #     node: [6, 8, 10]
    #     exclude:
    #       - os: ubuntu-16.04
    #         node: 6
    #     include:
    #       - os: macos-latest
    #         node: 10
    # runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.1
        # with:
        #   # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
        #   go-version: # optional
        #   # Path to the go.mod or go.work file.
        #   go-version-file: # optional
        #   # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
        #   check-latest: # optional
        #   # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
        #   token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
        #   # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
        #   cache: # optional, default is true
        #   # Used to specify the path to a dependency file - go.sum
        #   cache-dependency-path: # optional
        #   # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
        #   architecture: # optional
        id: goinit
      - name: Do Work
        run: |
          echo '::set-output name=FAV_NUMBER::3'
          echo '::set-output name=FAV_COLOR::blue'
        id: abc
      - name: Read output
        run: |
          echo "${{steps.abc.outputs.FAV_NUMBER}}"
          echo "${{steps.abc.outputs.FAV_COLOR}}"
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
    outputs:
      fav-animal: tiger
      fav-number: ${{steps.abc.outputs.FAV_NUMBER}}
  # job2:
  #   runs-on: ubuntu-latest
  #   needs: job1
  #   steps:
  #     - run: |
  #       echo "${{needs.job1.outputs.fav-animal}}"
  #       echo "${{needs.job1.outputs.fav-number}}"

